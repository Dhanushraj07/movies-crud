doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    title Movie CRUD App
    style.
      body { font-family: Arial; margin: 30px; }
      input, button { margin: 5px; padding: 6px; }
      .movie { border: 1px solid #ccc; padding: 10px; margin-top: 10px; }

  body
    h1 üé¨ Movie CRUD

    h2 Add New Movie
    input(type="text", id="title", placeholder="Title", required)
    input(type="text", id="language", placeholder="Language", required)
    input(type="number", id="year", placeholder="Year", required)
    button(onclick="addMovie()") Add Movie
    h2 Total movie: 
      span(id="total")

    h2 All Movies List
    #movieList
    
    script.
      const apiBase = '/api/movies';
      const token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4MDcxYTFhMmQ1N2ZhMWZmODBkOWMzOSIsImlhdCI6MTc0NTMwNzAzMywiZXhwIjoxNzQ1MzEwNjMzfQ.aemDwYdD133DAO3GkYZ1xhvdd175KxMAcYOs65-QtiY";
      // üîÅ Fetch all movies
      async function fetchMovies() {
        const res = await fetch(apiBase,{
            headers: {
            Authorization: `Bearer ${token}`
          }
     });
        const data = await res.json();
        console.log("The data fetched from db are : ",data);
        const container = document.getElementById('movieList');
        container.innerHTML = '';
        const total_container = document.getElementById('total');
        
          
         total_container.innerHTML = `
            <strong>${data.length}</strong>
          `;
          
        // Display each movieList
        data.forEach(movie => {
           
          const div2 = document.createElement('div');
          div2.className = 'movie';
          div2.innerHTML = `
            <strong>${movie.title}</strong> (${movie.language}, ${movie.year})<br>
            <button onclick="deleteMovie('${movie._id}')">üóë Delete</button>
            <button onclick="showUpdateForm('${movie._id}', '${movie.title}', '${movie.language}', ${movie.year})">‚úèÔ∏è Update</button>
          `;

          container.appendChild(div2);
        });
      }

      // ‚ûï Add a movie
      async function addMovie() {
        const title = document.getElementById('title').value;
        const language = document.getElementById('language').value;
        const year = document.getElementById('year').value;

        await fetch(apiBase, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ title, language, year })
        });
        alert('Movie added!');
        document.getElementById('title').value = '';
        document.getElementById('language').value = '';
        document.getElementById('year').value = '';
        fetchMovies();
      }

      // üóë Delete a movie
      async function deleteMovie(id) {
        const res = await fetch(`${apiBase}/${id}`, { method: 'DELETE', headers: {'Authorization': `Bearer ${token}`} });
        const data = await res.json();
        fetchMovies();
        alert(data.message);
      }

      // ‚úèÔ∏è Show update prompt and send update
      async function showUpdateForm(id, oldTitle, oldLang, oldYear) {
        const newTitle = prompt('Enter new title:', oldTitle);
        const newLang = prompt('Enter new language:', oldLang);
        const newYear = prompt('Enter new year:', oldYear);

        if (newTitle && newLang && newYear) {
          await fetch(`${apiBase}/${id}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ title: newTitle, language: newLang, year: newYear })
          });
          alert('Movie updated successfully!');
          fetchMovies();
        }
      }

      // Initial load
      fetchMovies();
